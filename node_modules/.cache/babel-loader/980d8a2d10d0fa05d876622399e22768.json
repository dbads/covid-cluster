{"ast":null,"code":"var _jsxFileName = \"/Users/dbadsmac/Dev/personal/hexagons/hexagonss/src/components/HexagonCluster.jsx\";\nimport React, { Component } from \"react\";\nimport { Line } from \"draw-shape-reactjs\"; // import { geometry, Image, Surface, Path, Text, Group } from \"@progress/kendo-drawing\";\n// const { Rect, Point, Size, transform } = geometry;\n\nclass HexagonCluster extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createHexagone = ({\n      startX,\n      startY\n    }) => {\n      const borders = [{\n        from: [startX, startY],\n        to: [startX + 50, startY],\n        colour: \"green\"\n      }, {\n        from: [startX + 50, startY],\n        to: [startX + 100, startY + 50],\n        colour: \"red\"\n      }, {\n        from: [startX + 100, startY + 50],\n        to: [startX + 50, startY + 100],\n        colour: \"yellow\"\n      }, {\n        from: [startX + 50, startY + 100],\n        to: [startX, startY + 100],\n        colour: \"pink\"\n      }, {\n        from: [startX, startY + 100],\n        to: [startX - 50, startY + 50],\n        colour: \"blue\"\n      }, {\n        from: [startX - 50, startY + 50],\n        to: [startX, startY],\n        colour: \"violet\"\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, borders.forEach(index => /*#__PURE__*/React.createElement(Line, {\n        key: index,\n        position: \"fixed\",\n        from: borders[index].from,\n        to: borders[index].to,\n        color: borders[index].colour,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    this.state = {// hexagons: [],\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, \"Hi There\", /*#__PURE__*/React.createElement(Line, {\n      key: \"0\",\n      position: \"fixed\",\n      from: [100, 100],\n      to: [150, 100],\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      key: \"1\",\n      position: \"fixed\",\n      from: [150, 100],\n      to: [200, 150],\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      key: \"2\",\n      position: \"fixed\",\n      from: [200, 150],\n      to: [150, 200],\n      color: \"yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      key: \"3\",\n      position: \"fixed\",\n      from: [150, 200],\n      to: [100, 200],\n      color: \"pink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      key: \"4\",\n      position: \"fixed\",\n      from: [100, 200],\n      to: [50, 150],\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      key: \"5\",\n      position: \"fixed\",\n      from: [50, 150],\n      to: [100, 100],\n      color: \"violet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default HexagonCluster;","map":{"version":3,"sources":["/Users/dbadsmac/Dev/personal/hexagons/hexagonss/src/components/HexagonCluster.jsx"],"names":["React","Component","Line","HexagonCluster","constructor","props","createHexagone","startX","startY","borders","from","to","colour","forEach","index","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from \"draw-shape-reactjs\";\n\n// import { geometry, Image, Surface, Path, Text, Group } from \"@progress/kendo-drawing\";\n// const { Rect, Point, Size, transform } = geometry;\n\nclass HexagonCluster extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // hexagons: [],\n    };\n  }\n\n  createHexagone = ({ startX, startY }) => {\n    const borders = [\n      { from: [startX, startY], to: [startX + 50, startY], colour: \"green\" },\n      { from: [startX + 50, startY], to: [startX + 100, startY + 50], colour: \"red\" },\n      { from: [startX + 100, startY + 50], to: [startX + 50, startY + 100], colour: \"yellow\" },\n      { from: [startX + 50, startY + 100], to: [startX, startY + 100], colour: \"pink\" },\n      { from: [startX, startY + 100], to: [startX - 50, startY + 50], colour: \"blue\" },\n      { from: [startX - 50, startY + 50], to: [startX, startY], colour: \"violet\" },\n    ];\n    return (\n      <div>\n        {borders.forEach((index) => (\n          <Line\n            key={index}\n            position=\"fixed\"\n            from={borders[index].from}\n            to={borders[index].to}\n            color={borders[index].colour}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div id=\"line\">\n        Hi There\n        <Line key=\"0\" position=\"fixed\" from={[100, 100]} to={[150, 100]} color=\"green\" />\n        <Line key=\"1\" position=\"fixed\" from={[150, 100]} to={[200, 150]} color=\"red\" />\n        <Line key=\"2\" position=\"fixed\" from={[200, 150]} to={[150, 200]} color=\"yellow\" />\n        <Line key=\"3\" position=\"fixed\" from={[150, 200]} to={[100, 200]} color=\"pink\" />\n        <Line key=\"4\" position=\"fixed\" from={[100, 200]} to={[50, 150]} color=\"blue\" />\n        <Line key=\"5\" position=\"fixed\" from={[50, 150]} to={[100, 100]} color=\"violet\" />\n      </div>\n    );\n  }\n}\n\nexport default HexagonCluster;\n"]},"metadata":{},"sourceType":"module"}