{"ast":null,"code":"var _jsxFileName = \"/Users/dbadsmac/Dev/personal/hexagons/hexagonss/src/components/HexagonCluster.jsx\";\nimport React, { Component } from \"react\";\nimport { Line } from \"draw-shape-reactjs\";\nimport { Form, Input, Row, Button } from \"antd\";\n\nclass HexagonCluster extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createHexagon = (hexagonBorders, hexagonName) => {\n      // console.log(\"creating new hexagon ---\", hexagonBorders, hexagonName);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: hexagonName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, hexagonBorders.map((border, index) => {\n        // console.log(border, index, \"---border-- index\");\n        return /*#__PURE__*/React.createElement(Line, {\n          key: `${hexagonName}-${index}`,\n          position: \"fixed\",\n          from: border.from,\n          to: border.to,\n          color: border.colour,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }\n        });\n      }));\n    };\n\n    this.addHexagon = () => {\n      const startX = Number(this.xCordinate.current.input.value);\n      const startY = Number(this.yCordinate.current.input.value);\n      const hexagonToAdd = this.hexagonToAdd.current.input.value; // console.log(startX, startY, hexagonToAdd, \"----- hexagon details --\");\n\n      if (startX && startY && hexagonToAdd) {\n        const borders = [{\n          from: [startX, startY],\n          to: [startX + 50, startY],\n          colour: \"green\"\n        }, {\n          from: [startX + 50, startY],\n          to: [startX + 100, startY + 50],\n          colour: \"red\"\n        }, {\n          from: [startX + 100, startY + 50],\n          to: [startX + 50, startY + 100],\n          colour: \"yellow\"\n        }, {\n          from: [startX + 50, startY + 100],\n          to: [startX, startY + 100],\n          colour: \"pink\"\n        }, {\n          from: [startX, startY + 100],\n          to: [startX - 50, startY + 50],\n          colour: \"blue\"\n        }, {\n          from: [startX - 50, startY + 50],\n          to: [startX, startY],\n          colour: \"violet\"\n        }]; // console.log(\"-- updating cluster --\");\n\n        const newHexagon = {\n          [hexagonToAdd]: borders\n        };\n        this.setState(state => ({\n          hexagons: { ...state.hexagons,\n            ...newHexagon\n          }\n        })); // console.log(\"-- updated cluster --\", this.state.hexagons);\n      } else {\n        console.log(\"--hexagon details are required ---\");\n      }\n    };\n\n    this.removeHexagon = () => {\n      console.log(\"-- removing hexagon --\", this.state.hexagonName);\n    };\n\n    this.hexagonToAdd = React.createRef();\n    this.hexagonToRemove = React.createRef();\n    this.xCordinate = React.createRef();\n    this.yCordinate = React.createRef();\n    this.state = {\n      hexagons: {}\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"--current hexagon--\", this.state.hexagons); // Object.entries(this.state.hexagons).map((hexagon) => console.log(hexagon[0], hexagon[1], \"---hexagon --\"));\n  }\n\n  componentDidUpdate() {\n    console.log(\"--current hexagon after update--\", this.state.hexagons); // Object.entries(this.state.hexagons).map((hexagon) =>\n    //   console.log(hexagon[0], hexagon[1], \"---hexagon --\")\n    // );\n  }\n\n  createCluster() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: \"villageCluster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, Object.entries(this.state.hexagons).map(hexagon => this.createHexagon(hexagon[1], hexagon[0])));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hexagonCluster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \" Hi There \"), this.createCluster(), /*#__PURE__*/React.createElement(Form, {\n      layout: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      key: \"addHexagonInputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Name of hexagon\",\n      ref: this.hexagonToAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"statX\",\n      placeholder: \"X coordinate\",\n      ref: this.xCordinate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"startY\",\n      placeholder: \"Y coordinate\",\n      ref: this.yCordinate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.addHexagon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \"Add Hexagon\")), /*#__PURE__*/React.createElement(Row, {\n      key: \"removeHexagonInputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Name of hexagon\",\n      ref: this.hexagonToRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.removeHexagon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"Remove Hexagon\"))));\n  }\n\n}\n\nexport default HexagonCluster;","map":{"version":3,"sources":["/Users/dbadsmac/Dev/personal/hexagons/hexagonss/src/components/HexagonCluster.jsx"],"names":["React","Component","Line","Form","Input","Row","Button","HexagonCluster","constructor","props","createHexagon","hexagonBorders","hexagonName","map","border","index","from","to","colour","addHexagon","startX","Number","xCordinate","current","input","value","startY","yCordinate","hexagonToAdd","borders","newHexagon","setState","state","hexagons","console","log","removeHexagon","createRef","hexagonToRemove","componentDidMount","componentDidUpdate","createCluster","Object","entries","hexagon","render","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from \"draw-shape-reactjs\";\nimport { Form, Input, Row, Button } from \"antd\";\n\nclass HexagonCluster extends Component {\n  constructor(props) {\n    super(props);\n    this.hexagonToAdd = React.createRef();\n    this.hexagonToRemove = React.createRef();\n    this.xCordinate = React.createRef();\n    this.yCordinate = React.createRef();\n    this.state = {\n      hexagons: {},\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"--current hexagon--\", this.state.hexagons);\n    // Object.entries(this.state.hexagons).map((hexagon) => console.log(hexagon[0], hexagon[1], \"---hexagon --\"));\n  }\n\n  componentDidUpdate() {\n    console.log(\"--current hexagon after update--\", this.state.hexagons);\n    // Object.entries(this.state.hexagons).map((hexagon) =>\n    //   console.log(hexagon[0], hexagon[1], \"---hexagon --\")\n    // );\n  }\n\n  createHexagon = (hexagonBorders, hexagonName) => {\n    // console.log(\"creating new hexagon ---\", hexagonBorders, hexagonName);\n    return (\n      <div key={hexagonName}>\n        {hexagonBorders.map((border, index) => {\n          // console.log(border, index, \"---border-- index\");\n          return (\n            <Line\n              key={`${hexagonName}-${index}`}\n              position=\"fixed\"\n              from={border.from}\n              to={border.to}\n              color={border.colour}\n            />\n          );\n        })}\n      </div>\n    );\n  };\n\n  getInputFor\n\n  addHexagon = () => {\n    const startX = Number(this.xCordinate.current.input.value);\n    const startY = Number(this.yCordinate.current.input.value);\n    const hexagonToAdd = this.hexagonToAdd.current.input.value;\n\n    // console.log(startX, startY, hexagonToAdd, \"----- hexagon details --\");\n\n    if (startX && startY && hexagonToAdd) {\n      const borders = [\n        { from: [startX, startY], to: [startX + 50, startY], colour: \"green\" },\n        { from: [startX + 50, startY], to: [startX + 100, startY + 50], colour: \"red\" },\n        { from: [startX + 100, startY + 50], to: [startX + 50, startY + 100], colour: \"yellow\" },\n        { from: [startX + 50, startY + 100], to: [startX, startY + 100], colour: \"pink\" },\n        { from: [startX, startY + 100], to: [startX - 50, startY + 50], colour: \"blue\" },\n        { from: [startX - 50, startY + 50], to: [startX, startY], colour: \"violet\" },\n      ];\n      // console.log(\"-- updating cluster --\");\n      const newHexagon = { [hexagonToAdd]: borders };\n      this.setState((state) => ({ hexagons: { ...state.hexagons, ...newHexagon } }));\n      // console.log(\"-- updated cluster --\", this.state.hexagons);\n    }\n    else {\n      console.log(\"--hexagon details are required ---\");\n    }\n  };\n\n  removeHexagon = () => {\n\n    console.log(\"-- removing hexagon --\", this.state.hexagonName);\n  };\n\n  createCluster() {\n    return (\n      <div key=\"villageCluster\">\n        {Object.entries(this.state.hexagons).map((hexagon) =>\n          this.createHexagon(hexagon[1], hexagon[0])\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"hexagonCluster\">\n        <span style={{ color: \"blue\" }}> Hi There </span>\n        {/* <Line key=\"0\" position=\"fixed\" from={[100, 100]} to={[150, 100]} color=\"green\" />\n        <Line key=\"1\" position=\"fixed\" from={[150, 100]} to={[200, 150]} color=\"red\" />\n        <Line key=\"2\" position=\"fixed\" from={[200, 150]} to={[150, 200]} color=\"yellow\" />\n        <Line key=\"3\" position=\"fixed\" from={[150, 200]} to={[100, 200]} color=\"pink\" />\n        <Line key=\"4\" position=\"fixed\" from={[100, 200]} to={[50, 150]} color=\"blue\" />\n        <Line key=\"5\" position=\"fixed\" from={[50, 150]} to={[100, 100]} color=\"violet\" /> */}\n        {/* {this.createHexagon({ startX: 100, startY: 100 })} */}\n\n        {this.createCluster()}\n\n        {/* <div key=\"villageCluster\">\n          {Object.entries(hexagons).map((hexagon) => {\n            console.log(hexagon, \"---- adding\");\n            return this.createHexagon(hexagon[1], hexagon[0]);\n          })}\n        </div> */}\n\n        <Form layout=\"vertical\">\n          <Row key=\"addHexagonInputs\">\n            <Input placeholder=\"Name of hexagon\" ref={this.hexagonToAdd} />\n            <Input name=\"statX\" placeholder=\"X coordinate\" ref={this.xCordinate} />\n            <Input name=\"startY\" placeholder=\"Y coordinate\" ref={this.yCordinate} />\n            <Button onClick={this.addHexagon}>Add Hexagon</Button>\n          </Row>\n          <Row key=\"removeHexagonInputs\">\n            <Input placeholder=\"Name of hexagon\" ref={this.hexagonToRemove} />\n            <Button onClick={this.removeHexagon}>Remove Hexagon</Button>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default HexagonCluster;\n"]},"metadata":{},"sourceType":"module"}