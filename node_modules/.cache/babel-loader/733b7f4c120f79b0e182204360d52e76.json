{"ast":null,"code":"var _jsxFileName = \"/Users/dbadsmac/Dev/personal/hexagons/hexagonss/src/components/HexagonCluster.jsx\";\nimport React, { Component } from \"react\";\nimport { Line } from \"draw-shape-reactjs\";\nimport { Form, Input, Row, Button } from \"antd\";\n\nclass HexagonCluster extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createHexagon = (hexagon, hexagonIndex) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: hexagonIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, hexagon.map((border, index) => /*#__PURE__*/React.createElement(Line, {\n        key: `${hexagonIndex}-${index}`,\n        position: \"fixed\",\n        from: border.from,\n        to: border.to,\n        color: border.colour,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    this.addHexagon = event => {\n      console.log(event, \"----- hexagone details received ---\"); // const borders = [\n      //   { from: [startX, startY], to: [startX + 50, startY], colour: \"green\" },\n      //   { from: [startX + 50, startY], to: [startX + 100, startY + 50], colour: \"red\" },\n      //   { from: [startX + 100, startY + 50], to: [startX + 50, startY + 100], colour: \"yellow\" },\n      //   { from: [startX + 50, startY + 100], to: [startX, startY + 100], colour: \"pink\" },\n      //   { from: [startX, startY + 100], to: [startX - 50, startY + 50], colour: \"blue\" },\n      //   { from: [startX - 50, startY + 50], to: [startX, startY], colour: \"violet\" },\n      // ];\n      // console.log(\"-- updating cluster --\");\n      // const newHexagon = borders;\n      // this.setState((state) => [...state.hexagons, newHexagon]);\n    };\n\n    this.state = {\n      hexagons: []\n    };\n  }\n\n  createCluster() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: \"villageCluster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, this.state.hexagons.map((hexagon, index) => this.createHexagon(hexagon, index)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \" Hi There \"), this.createCluster(), /*#__PURE__*/React.createElement(Form, {\n      layout: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Name of hexagon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"statX\",\n      placeholder: \"X coordinate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"startY\",\n      placeholder: \"Y coordinate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: (name, startX, startY) => this.addHexagon(name, startX = getFieldValue('startX')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Add Hexagon\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Name of hexagon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: name => this.removeHexagon(name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Remove Hexagon\")))));\n  }\n\n}\n\nexport default HexagonCluster;","map":{"version":3,"sources":["/Users/dbadsmac/Dev/personal/hexagons/hexagonss/src/components/HexagonCluster.jsx"],"names":["React","Component","Line","Form","Input","Row","Button","HexagonCluster","constructor","props","createHexagon","hexagon","hexagonIndex","map","border","index","from","to","colour","addHexagon","event","console","log","state","hexagons","createCluster","render","color","name","startX","startY","getFieldValue","removeHexagon"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from \"draw-shape-reactjs\";\nimport { Form, Input, Row, Button } from \"antd\";\n\nclass HexagonCluster extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hexagons: [],\n    };\n  }\n\n  createHexagon = (hexagon, hexagonIndex) => {\n    return (\n      <div key={hexagonIndex}>\n        {hexagon.map((border, index) => (\n          <Line\n            key={`${hexagonIndex}-${index}`}\n            position=\"fixed\"\n            from={border.from}\n            to={border.to}\n            color={border.colour}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  addHexagon = (event) => {\n    console.log(event, \"----- hexagone details received ---\");\n    // const borders = [\n    //   { from: [startX, startY], to: [startX + 50, startY], colour: \"green\" },\n    //   { from: [startX + 50, startY], to: [startX + 100, startY + 50], colour: \"red\" },\n    //   { from: [startX + 100, startY + 50], to: [startX + 50, startY + 100], colour: \"yellow\" },\n    //   { from: [startX + 50, startY + 100], to: [startX, startY + 100], colour: \"pink\" },\n    //   { from: [startX, startY + 100], to: [startX - 50, startY + 50], colour: \"blue\" },\n    //   { from: [startX - 50, startY + 50], to: [startX, startY], colour: \"violet\" },\n    // ];\n    // console.log(\"-- updating cluster --\");\n    // const newHexagon = borders;\n    // this.setState((state) => [...state.hexagons, newHexagon]);\n  };\n\n  createCluster() {\n    return (\n      <div key=\"villageCluster\">\n        {this.state.hexagons.map((hexagon, index) => this.createHexagon(hexagon, index))}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <span style={{ color: \"blue\" }}> Hi There </span>\n        {/* <Line key=\"0\" position=\"fixed\" from={[100, 100]} to={[150, 100]} color=\"green\" />\n        <Line key=\"1\" position=\"fixed\" from={[150, 100]} to={[200, 150]} color=\"red\" />\n        <Line key=\"2\" position=\"fixed\" from={[200, 150]} to={[150, 200]} color=\"yellow\" />\n        <Line key=\"3\" position=\"fixed\" from={[150, 200]} to={[100, 200]} color=\"pink\" />\n        <Line key=\"4\" position=\"fixed\" from={[100, 200]} to={[50, 150]} color=\"blue\" />\n        <Line key=\"5\" position=\"fixed\" from={[50, 150]} to={[100, 100]} color=\"violet\" /> */}\n        {/* {this.createHexagon({ startX: 100, startY: 100 })} */}\n\n        {this.createCluster()}\n\n        <Form layout=\"vertical\">\n          <Form.Item>\n            <Row>\n              <Input placeholder=\"Name of hexagon\" />\n              <Input name=\"statX\" placeholder=\"X coordinate\" />\n              <Input name=\"startY\" placeholder=\"Y coordinate\" />\n              <Button onClick={(name, startX, startY) => this.addHexagon(name, startX=getFieldValue('startX'), )}>Add Hexagon</Button>\n            </Row>\n          </Form.Item>\n          <Form.Item>\n            <Row>\n              <Input placeholder=\"Name of hexagon\" />\n              <Button onClick={(name) => this.removeHexagon(name)}>Remove Hexagon</Button>\n            </Row>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default HexagonCluster;\n"]},"metadata":{},"sourceType":"module"}