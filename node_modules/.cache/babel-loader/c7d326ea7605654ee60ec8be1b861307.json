{"ast":null,"code":"var _jsxFileName = \"/Users/dbadsmac/Dev/personal/hexagons/hexagonss/src/components/HexagonCluster.jsx\";\nimport React, { Component } from \"react\";\nimport { Line } from \"draw-shape-reactjs\"; // import { geometry, Image, Surface, Path, Text, Group } from \"@progress/kendo-drawing\";\n// const { Rect, Point, Size, transform } = geometry;\n\nclass HexagonCluster extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createHexagone = ({\n      startX,\n      startY\n    }) => {\n      const borders = [{\n        from: [startX, startY],\n        to: [startX + 50, startY],\n        colour: \"green\"\n      }, {\n        from: [startX + 50, startY],\n        to: [startX + 100, startY + 50],\n        colour: \"red\"\n      }, {\n        from: [startX + 100, startY + 50],\n        to: [startX + 50, startY + 100],\n        colour: \"yellow\"\n      }, {\n        from: [startX + 50, startY + 100],\n        to: [startX, startY + 100],\n        colour: \"pink\"\n      }, {\n        from: [startX, startY + 100],\n        to: [startX - 50, startY + 50],\n        colour: \"blue\"\n      }, {\n        from: [startX - 50, startY + 50],\n        to: [startX, startY],\n        colour: \"violet\"\n      }];\n      console.log(\"-- creating hexagones --\");\n      const newVillage = borders;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: this.state.hexagons.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, borders.map((border, index) => /*#__PURE__*/React.createElement(Line, {\n        key: index,\n        position: \"fixed\",\n        from: border.from,\n        to: border.to,\n        color: border.colour,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    this.state = {\n      hexagons: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \" Hi There \"), this.createHexagone({\n      startX: 100,\n      startY: 100\n    }));\n  }\n\n}\n\nexport default HexagonCluster;","map":{"version":3,"sources":["/Users/dbadsmac/Dev/personal/hexagons/hexagonss/src/components/HexagonCluster.jsx"],"names":["React","Component","Line","HexagonCluster","constructor","props","createHexagone","startX","startY","borders","from","to","colour","console","log","newVillage","state","hexagons","length","map","border","index","render","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from \"draw-shape-reactjs\";\n\n// import { geometry, Image, Surface, Path, Text, Group } from \"@progress/kendo-drawing\";\n// const { Rect, Point, Size, transform } = geometry;\n\nclass HexagonCluster extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hexagons: [],\n    };\n  }\n\n  createHexagone = ({ startX, startY }) => {\n    const borders = [\n      { from: [startX, startY], to: [startX + 50, startY], colour: \"green\" },\n      { from: [startX + 50, startY], to: [startX + 100, startY + 50], colour: \"red\" },\n      { from: [startX + 100, startY + 50], to: [startX + 50, startY + 100], colour: \"yellow\" },\n      { from: [startX + 50, startY + 100], to: [startX, startY + 100], colour: \"pink\" },\n      { from: [startX, startY + 100], to: [startX - 50, startY + 50], colour: \"blue\" },\n      { from: [startX - 50, startY + 50], to: [startX, startY], colour: \"violet\" },\n    ];\n    console.log(\"-- creating hexagones --\");\n    const newVillage = borders\n    return (\n      <div key={this.state.hexagons.length}>\n\n        {borders.map((border, index) => (\n          <Line\n            key={index}\n            position=\"fixed\"\n            from={border.from}\n            to={border.to}\n            color={border.colour}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <span style={{ color: \"blue\" }}> Hi There </span>\n        {/* <Line key=\"0\" position=\"fixed\" from={[100, 100]} to={[150, 100]} color=\"green\" />\n        <Line key=\"1\" position=\"fixed\" from={[150, 100]} to={[200, 150]} color=\"red\" />\n        <Line key=\"2\" position=\"fixed\" from={[200, 150]} to={[150, 200]} color=\"yellow\" />\n        <Line key=\"3\" position=\"fixed\" from={[150, 200]} to={[100, 200]} color=\"pink\" />\n        <Line key=\"4\" position=\"fixed\" from={[100, 200]} to={[50, 150]} color=\"blue\" />\n        <Line key=\"5\" position=\"fixed\" from={[50, 150]} to={[100, 100]} color=\"violet\" /> */}\n        {this.createHexagone({ startX: 100, startY: 100 })}\n      </div>\n    );\n  }\n}\n\nexport default HexagonCluster;\n"]},"metadata":{},"sourceType":"module"}