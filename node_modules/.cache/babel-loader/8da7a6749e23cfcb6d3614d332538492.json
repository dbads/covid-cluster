{"ast":null,"code":"var _jsxFileName = \"/Users/dbadsmac/Dev/personal/hexagons/hexagonss/src/components/HexagonCluster.jsx\";\nimport React, { Component } from \"react\";\nimport { Line } from \"draw-shape-reactjs\";\nimport { Form, Input, Row, Button } from \"antd\";\n\nclass HexagonCluster extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createHexagon = (hexagonBorders, hexagonName) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: hexagonName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, hexagonBorders.map((border, index) => /*#__PURE__*/React.createElement(Line, {\n        key: `${hexagonName}-${index}`,\n        position: \"fixed\",\n        from: border.from,\n        to: border.to,\n        color: border.colour,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    this.removeHexagon = event => {\n      console.log(\"-- removing hexagon --\", event);\n    };\n\n    this.createCluster = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"villageCluster\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, Object.entries(this.state.hexagons).map(hexagon => this.createHexagon(hexagon[1], hexagon[0])));\n    };\n\n    this.hexagonAddForm = () => {\n      addHexagon = event => {\n        // console.log(this.state.hexagonName, \"=====hexagone name ----\");\n        // console.log(\n        //   this.state.hexagonName,\n        //   this.state.startX,\n        //   this.state.startY,\n        //   \"----- hexagone details received ---\"\n        // );\n        console.log(event, \"----\"); // const { startX, startY, hexagonName } = this.state;\n        // if (startX && startY && hexagonName) {\n        //   const borders = [\n        //     { from: [startX, startY], to: [startX + 50, startY], colour: \"green\" },\n        //     { from: [startX + 50, startY], to: [startX + 100, startY + 50], colour: \"red\" },\n        //     { from: [startX + 100, startY + 50], to: [startX + 50, startY + 100], colour: \"yellow\" },\n        //     { from: [startX + 50, startY + 100], to: [startX, startY + 100], colour: \"pink\" },\n        //     { from: [startX, startY + 100], to: [startX - 50, startY + 50], colour: \"blue\" },\n        //     { from: [startX - 50, startY + 50], to: [startX, startY], colour: \"violet\" },\n        //   ];\n        //   console.log(\"-- updating cluster --\");\n        //   const newHexagon = { [hexagonName]: borders };\n        //   this.setState((state) => ({ hexagons: { ...state.hexagons, ...newHexagon } }));\n        // }\n        // else {\n        //   console.log(\"--hexagon details are required ---\");\n        // }\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"action-forms\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        layout: \"vertical\",\n        name: \"hexagonAddForm\",\n        onFinish: this.addHexagon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Name of hexagon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        name: \"statX\",\n        placeholder: \"X coordinate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        name: \"startY\",\n        placeholder: \"Y coordinate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        htmlType: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, \"Add Hexagon\"))));\n    };\n\n    this.state = {\n      hexagons: {}\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"--current hexagon--\", this.state.hexagons);\n    Object.entries(this.state.hexagons).map(hexagon => {\n      console.log(hexagon, \"---hexagon --\");\n      return this.createHexagon(hexagon[1], hexagon[0]);\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(\"--current hexagon after update--\", this.state.hexagons);\n    Object.entries(this.state.hexagons).map(hexagon => {\n      console.log(hexagon, \"---hexagon --\");\n      return this.createHexagon(hexagon[1], hexagon[0]);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \" Hi There \"), this.createCluster());\n  }\n\n}\n\nexport default HexagonCluster;","map":{"version":3,"sources":["/Users/dbadsmac/Dev/personal/hexagons/hexagonss/src/components/HexagonCluster.jsx"],"names":["React","Component","Line","Form","Input","Row","Button","HexagonCluster","constructor","props","createHexagon","hexagonBorders","hexagonName","map","border","index","from","to","colour","removeHexagon","event","console","log","createCluster","Object","entries","state","hexagons","hexagon","hexagonAddForm","addHexagon","componentDidMount","componentDidUpdate","render","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from \"draw-shape-reactjs\";\nimport { Form, Input, Row, Button } from \"antd\";\n\nclass HexagonCluster extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hexagons: {},\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"--current hexagon--\", this.state.hexagons);\n    Object.entries(this.state.hexagons).map((hexagon) => {\n      console.log(hexagon, \"---hexagon --\");\n      return this.createHexagon(hexagon[1], hexagon[0]);\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(\"--current hexagon after update--\", this.state.hexagons);\n    Object.entries(this.state.hexagons).map((hexagon) => {\n      console.log(hexagon, \"---hexagon --\");\n      return this.createHexagon(hexagon[1], hexagon[0]);\n    });\n  }\n\n  createHexagon = (hexagonBorders, hexagonName) => {\n    return (\n      <div key={hexagonName}>\n        {hexagonBorders.map((border, index) => (\n          <Line\n            key={`${hexagonName}-${index}`}\n            position=\"fixed\"\n            from={border.from}\n            to={border.to}\n            color={border.colour}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  removeHexagon = (event) => {\n    console.log(\"-- removing hexagon --\", event);\n  };\n\n  createCluster = () => {\n    return (\n      <div key=\"villageCluster\">\n        {Object.entries(this.state.hexagons).map((hexagon) =>\n          this.createHexagon(hexagon[1], hexagon[0])\n        )}\n      </div>\n    );\n  };\n\n  hexagonAddForm = () => {\n    addHexagon = (event) => {\n      // console.log(this.state.hexagonName, \"=====hexagone name ----\");\n      // console.log(\n      //   this.state.hexagonName,\n      //   this.state.startX,\n      //   this.state.startY,\n      //   \"----- hexagone details received ---\"\n      // );\n\n      console.log(event, \"----\");\n\n      // const { startX, startY, hexagonName } = this.state;\n      // if (startX && startY && hexagonName) {\n      //   const borders = [\n      //     { from: [startX, startY], to: [startX + 50, startY], colour: \"green\" },\n      //     { from: [startX + 50, startY], to: [startX + 100, startY + 50], colour: \"red\" },\n      //     { from: [startX + 100, startY + 50], to: [startX + 50, startY + 100], colour: \"yellow\" },\n      //     { from: [startX + 50, startY + 100], to: [startX, startY + 100], colour: \"pink\" },\n      //     { from: [startX, startY + 100], to: [startX - 50, startY + 50], colour: \"blue\" },\n      //     { from: [startX - 50, startY + 50], to: [startX, startY], colour: \"violet\" },\n      //   ];\n      //   console.log(\"-- updating cluster --\");\n      //   const newHexagon = { [hexagonName]: borders };\n      //   this.setState((state) => ({ hexagons: { ...state.hexagons, ...newHexagon } }));\n      // }\n      // else {\n      //   console.log(\"--hexagon details are required ---\");\n      // }\n    };\n\n    return (\n      <div key=\"action-forms\">\n        <Form layout=\"vertical\" name=\"hexagonAddForm\" onFinish={this.addHexagon}>\n          <Row>\n            <Input placeholder=\"Name of hexagon\" />\n            <Input name=\"statX\" placeholder=\"X coordinate\" />\n            <Input name=\"startY\" placeholder=\"Y coordinate\" />\n            <Button type=\"submit\" htmlType=\"submit\">\n              Add Hexagon\n            </Button>\n          </Row>\n        </Form>\n\n\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <span style={{ color: \"blue\" }}> Hi There </span>\n        {/* <Line key=\"0\" position=\"fixed\" from={[100, 100]} to={[150, 100]} color=\"green\" />\n        <Line key=\"1\" position=\"fixed\" from={[150, 100]} to={[200, 150]} color=\"red\" />\n        <Line key=\"2\" position=\"fixed\" from={[200, 150]} to={[150, 200]} color=\"yellow\" />\n        <Line key=\"3\" position=\"fixed\" from={[150, 200]} to={[100, 200]} color=\"pink\" />\n        <Line key=\"4\" position=\"fixed\" from={[100, 200]} to={[50, 150]} color=\"blue\" />\n        <Line key=\"5\" position=\"fixed\" from={[50, 150]} to={[100, 100]} color=\"violet\" /> */}\n        {/* {this.createHexagon({ startX: 100, startY: 100 })} */}\n\n        {this.createCluster()}\n      </div>\n    );\n  }\n}\n\nexport default HexagonCluster;\n"]},"metadata":{},"sourceType":"module"}